{"version":3,"sources":["stores/authorStore.js","api/authorApi.js","actions/author/authorActions.js","components/CourseForm.jsx"],"names":["CHANGE_EVENT","_authors","store","this","emit","callback","on","removeListener","slug","find","author","EventEmitter","Dispatcher","register","action","actionType","actionTypes","CREATE_AUTHOR","push","emitChange","LOAD_AUTHOR","authors","UPDATE_AUTHOR","map","id","DELETE_AUTHOR","filter","parseInt","baseUrl","process","REACT_APP_API_URL","saveAuthor","fetch","method","headers","body","JSON","stringify","then","handleResponse","catch","handleError","authorApi","savedAuthor","dispatcher","dispatch","toast","info","loadAuthors","deleteAuthor","authorId","error","TextInput","loadable","DropDown","CourseForm","course","onChange","onSubmit","errors","useState","authorStore","getAuthors","setAuthors","onChangeAuthors","useEffect","addChangeListener","length","removeChangeListener","className","label","name","value","title","category","type"],"mappings":"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","file":"static/js/10.7c2474f7.chunk.js","sourcesContent":["import { EventEmitter } from \"events\"\r\nimport Dispatcher from \"../appDispatcher\"\r\nimport actionTypes from \"../actions/actionTypes\"\r\n\r\nconst CHANGE_EVENT = \"change\"\r\nlet _authors = []\r\n\r\nclass AuthorStore extends EventEmitter {\r\n\temitChange() {\r\n\t\tthis.emit(CHANGE_EVENT)\r\n\t}\r\n\r\n\taddChangeListener(callback) {\r\n\t\tthis.on(CHANGE_EVENT, callback)\r\n\t}\r\n\r\n\tremoveChangeListener(callback) {\r\n\t\tthis.removeListener(CHANGE_EVENT, callback)\r\n\t}\r\n\r\n\tgetAuthors() {\r\n\t\treturn _authors\r\n\t}\r\n\r\n\tgetAuthorsBySlug(slug) {\r\n\t\treturn _authors.find(author => author.slug === slug)\r\n\t}\r\n}\r\n\r\nconst store = new AuthorStore()\r\n\r\nDispatcher.register(action => {\r\n\tswitch (action.actionType) {\r\n\t\tcase actionTypes.CREATE_AUTHOR:\r\n\t\t\t_authors.push(action.author)\r\n\t\t\tstore.emitChange()\r\n\t\t\tbreak\r\n\r\n\t\tcase actionTypes.LOAD_AUTHOR:\r\n\t\t\t_authors = action.authors\r\n\t\t\tstore.emitChange()\r\n\t\t\tbreak\r\n\r\n\t\tcase actionTypes.UPDATE_AUTHOR:\r\n\t\t\t_authors = _authors.map(author => (author.id === action.author.id ? action.author : author))\r\n\t\t\tstore.emitChange()\r\n\t\t\tbreak\r\n\r\n\t\tcase actionTypes.DELETE_AUTHOR:\r\n\t\t\t_authors = _authors.filter(author => author.id !== parseInt(action.id, 10))\r\n\t\t\tstore.emitChange()\r\n\t\t\tbreak\r\n\r\n\t\tdefault:\r\n\t}\r\n})\r\n\r\nexport default store\r\n","import { handleResponse, handleError } from \"./apiUtils\"\nconst baseUrl = process.env.REACT_APP_API_URL\n\t? process.env.REACT_APP_API_URL + \"/authors/\"\n\t: \"https://my-json-server.typicode.com/rayhansoe/course-db-json/authors/\"\n\nexport function getAuthors() {\n\treturn fetch(baseUrl).then(handleResponse).catch(handleError)\n}\n\nexport function saveAuthor(author) {\n\treturn fetch(baseUrl + (author.id || \"\"), {\n\t\tmethod: author.id ? \"PUT\" : \"POST\", // POST for create, PUT to update when id already exists.\n\t\theaders: { \"content-type\": \"application/json\" },\n\t\tbody: JSON.stringify(author),\n\t})\n\t\t.then(handleResponse)\n\t\t.catch(handleError)\n}\n\nexport function deleteAuthor(authorId) {\n\treturn fetch(baseUrl + authorId, { method: \"DELETE\" })\n\t\t.then(handleResponse)\n\t\t.catch(handleError)\n}\n","import actionTypes from \"../actionTypes\"\r\nimport * as authorApi from \"../../api/authorApi\"\r\nimport dispatcher from \"../../appDispatcher\"\r\nimport { toast } from \"react-toastify\"\r\n\r\nexport const saveAuthor = author => {\r\n\treturn authorApi.saveAuthor(author).then(savedAuthor => {\r\n\t\tdispatcher.dispatch({\r\n\t\t\tactionType: author.id ? actionTypes.UPDATE_AUTHOR : actionTypes.CREATE_AUTHOR,\r\n\t\t\tauthor: savedAuthor,\r\n\t\t})\r\n\t\tauthor.id ? toast.info(\"ðŸš€ Author Updated\") : toast.info(\"ðŸš€ Author Saved\")\r\n\t})\r\n}\r\n\r\nexport const loadAuthors = () => {\r\n\treturn authorApi.getAuthors().then(authors => {\r\n\t\tdispatcher.dispatch({\r\n\t\t\tactionType: actionTypes.LOAD_AUTHOR,\r\n\t\t\tauthors,\r\n\t\t})\r\n\t})\r\n}\r\n\r\nexport const deleteAuthor = id => {\r\n\treturn authorApi.deleteAuthor(id).then(() => {\r\n\t\tdispatcher.dispatch({\r\n\t\t\tactionType: actionTypes.DELETE_AUTHOR,\r\n\t\t\tid,\r\n\t\t})\r\n\t\ttoast.error(\"âš  Course deleted\")\r\n\t})\r\n}\r\n","import { useState, useEffect } from \"react\"\nimport loadable from \"@loadable/component\"\nimport { loadAuthors } from \"../actions/author/authorActions\"\nimport authorStore from \"../stores/authorStore\"\nimport PropTypes from \"prop-types\"\nconst TextInput = loadable(() => import(\"./common/TextInput\"))\nconst DropDown = loadable(() => import(\"./common/DropDown\"))\n\nconst CourseForm = ({ course, onChange, onSubmit, errors }) => {\n\tconst [authors, setAuthors] = useState(authorStore.getAuthors())\n\n\tconst onChangeAuthors = () => {\n\t\tsetAuthors(authorStore.getAuthors())\n\t}\n\n\tuseEffect(() => {\n\t\tauthorStore.addChangeListener(onChangeAuthors)\n\n\t\tif (authorStore.getAuthors().length === 0) loadAuthors()\n\n\t\treturn () => {\n\t\t\tauthorStore.removeChangeListener(onChangeAuthors)\n\t\t}\n\t}, [authors.length])\n\n\treturn (\n\t\t<form className='form' onSubmit={onSubmit}>\n\t\t\t<TextInput\n\t\t\t\tid='title'\n\t\t\t\tlabel='Title'\n\t\t\t\tonChange={onChange}\n\t\t\t\tname='title'\n\t\t\t\tvalue={course.title}\n\t\t\t\terror={errors.title}\n\t\t\t/>\n\n\t\t\t<DropDown\n\t\t\t\tid='author'\n\t\t\t\tname='authorId'\n\t\t\t\tonChange={onChange}\n\t\t\t\tcourse={course}\n\t\t\t\tauthors={authors}\n\t\t\t\terrors={errors}\n\t\t\t/>\n\n\t\t\t<TextInput\n\t\t\t\tid='category'\n\t\t\t\tlabel='Category'\n\t\t\t\tonChange={onChange}\n\t\t\t\tname='category'\n\t\t\t\tvalue={course.category}\n\t\t\t\terror={errors.category}\n\t\t\t/>\n\n\t\t\t<input type='submit' value='Save' className='btn btn-primary mt-3' />\n\t\t</form>\n\t)\n}\n\nCourseForm.propTypes = {\n\tcourse: PropTypes.object.isRequired,\n\tonSubmit: PropTypes.func.isRequired,\n\tonChange: PropTypes.func.isRequired,\n\terrors: PropTypes.object.isRequired,\n}\n\nexport default CourseForm\n"],"sourceRoot":""}