{"version":3,"sources":["appDispatcher.js","actions/actionTypes.js","api/apiUtils.js","stores/authorStore.js","api/authorApi.js","actions/author/authorActions.js","components/AuthorsPage.jsx"],"names":["dispatcher","Dispatcher","CREATE_COURSE","LOAD_COURSES","UPDATE_COURSE","DELETE_COURSE","CREATE_AUTHOR","LOAD_AUTHOR","UPDATE_AUTHOR","DELETE_AUTHOR","handleResponse","response","a","ok","json","status","text","error","Error","handleError","console","CHANGE_EVENT","_authors","store","this","emit","callback","on","removeListener","slug","find","author","EventEmitter","register","action","actionType","actionTypes","push","emitChange","authors","map","id","filter","parseInt","baseUrl","process","REACT_APP_API_URL","saveAuthor","fetch","method","headers","body","JSON","stringify","then","catch","authorApi","savedAuthor","dispatch","toast","info","loadAuthors","deleteAuthor","authorId","AuthorsList","loadable","AuthorsPage","useState","authorStore","getAuthors","setAuthors","onChange","useEffect","addChangeListener","length","removeChangeListener","className","to"],"mappings":"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","file":"static/js/8.b4f27329.chunk.js","sourcesContent":["import { Dispatcher } from \"flux\"\r\n\r\nconst dispatcher = new Dispatcher()\r\n\r\nexport default dispatcher\r\n","/* eslint-disable import/no-anonymous-default-export */\r\nexport default {\r\n\tCREATE_COURSE: \"CREATE_COURSE\",\r\n\tLOAD_COURSES: \"LOAD_COURSES\",\r\n\tUPDATE_COURSE: \"UPDATE_COURSE\",\r\n\tDELETE_COURSE: \"DELETE_COURSE\",\r\n\tCREATE_AUTHOR: \"CREATE_AUTHOR\",\r\n\tLOAD_AUTHOR: \"LOAD_AUTHOR\",\r\n\tUPDATE_AUTHOR: \"UPDATE_AUTHOR\",\r\n\tDELETE_AUTHOR: \"DELETE_AUTHOR\",\r\n}\r\n","export async function handleResponse(response) {\n  if (response.ok) return response.json();\n  if (response.status === 400) {\n    // So, a server-side validation error occurred.\n    // Server side validation returns a string error message, so parse as text instead of json.\n    const error = await response.text();\n    throw new Error(error);\n  }\n  throw new Error(\"Network response was not ok.\");\n}\n\n// In a real app, would likely call an error logging service.\nexport function handleError(error) {\n  // eslint-disable-next-line no-console\n  console.error(\"API call failed. \" + error);\n  throw error;\n}\n","import { EventEmitter } from \"events\"\r\nimport Dispatcher from \"../appDispatcher\"\r\nimport actionTypes from \"../actions/actionTypes\"\r\n\r\nconst CHANGE_EVENT = \"change\"\r\nlet _authors = []\r\n\r\nclass AuthorStore extends EventEmitter {\r\n\temitChange() {\r\n\t\tthis.emit(CHANGE_EVENT)\r\n\t}\r\n\r\n\taddChangeListener(callback) {\r\n\t\tthis.on(CHANGE_EVENT, callback)\r\n\t}\r\n\r\n\tremoveChangeListener(callback) {\r\n\t\tthis.removeListener(CHANGE_EVENT, callback)\r\n\t}\r\n\r\n\tgetAuthors() {\r\n\t\treturn _authors\r\n\t}\r\n\r\n\tgetAuthorsBySlug(slug) {\r\n\t\treturn _authors.find(author => author.slug === slug)\r\n\t}\r\n}\r\n\r\nconst store = new AuthorStore()\r\n\r\nDispatcher.register(action => {\r\n\tswitch (action.actionType) {\r\n\t\tcase actionTypes.CREATE_AUTHOR:\r\n\t\t\t_authors.push(action.author)\r\n\t\t\tstore.emitChange()\r\n\t\t\tbreak\r\n\r\n\t\tcase actionTypes.LOAD_AUTHOR:\r\n\t\t\t_authors = action.authors\r\n\t\t\tstore.emitChange()\r\n\t\t\tbreak\r\n\r\n\t\tcase actionTypes.UPDATE_AUTHOR:\r\n\t\t\t_authors = _authors.map(author => (author.id === action.author.id ? action.author : author))\r\n\t\t\tstore.emitChange()\r\n\t\t\tbreak\r\n\r\n\t\tcase actionTypes.DELETE_AUTHOR:\r\n\t\t\t_authors = _authors.filter(author => author.id !== parseInt(action.id, 10))\r\n\t\t\tstore.emitChange()\r\n\t\t\tbreak\r\n\r\n\t\tdefault:\r\n\t}\r\n})\r\n\r\nexport default store\r\n","import { handleResponse, handleError } from \"./apiUtils\"\nconst baseUrl = process.env.REACT_APP_API_URL\n\t? process.env.REACT_APP_API_URL + \"/authors/\"\n\t: \"https://my-json-server.typicode.com/rayhansoe/course-db-json/authors/\"\n\nexport function getAuthors() {\n\treturn fetch(baseUrl).then(handleResponse).catch(handleError)\n}\n\nexport function saveAuthor(author) {\n\treturn fetch(baseUrl + (author.id || \"\"), {\n\t\tmethod: author.id ? \"PUT\" : \"POST\", // POST for create, PUT to update when id already exists.\n\t\theaders: { \"content-type\": \"application/json\" },\n\t\tbody: JSON.stringify(author),\n\t})\n\t\t.then(handleResponse)\n\t\t.catch(handleError)\n}\n\nexport function deleteAuthor(authorId) {\n\treturn fetch(baseUrl + authorId, { method: \"DELETE\" })\n\t\t.then(handleResponse)\n\t\t.catch(handleError)\n}\n","import actionTypes from \"../actionTypes\"\r\nimport * as authorApi from \"../../api/authorApi\"\r\nimport dispatcher from \"../../appDispatcher\"\r\nimport { toast } from \"react-toastify\"\r\n\r\nexport const saveAuthor = author => {\r\n\treturn authorApi.saveAuthor(author).then(savedAuthor => {\r\n\t\tdispatcher.dispatch({\r\n\t\t\tactionType: author.id ? actionTypes.UPDATE_AUTHOR : actionTypes.CREATE_AUTHOR,\r\n\t\t\tauthor: savedAuthor,\r\n\t\t})\r\n\t\tauthor.id ? toast.info(\"ðŸš€ Author Updated\") : toast.info(\"ðŸš€ Author Saved\")\r\n\t})\r\n}\r\n\r\nexport const loadAuthors = () => {\r\n\treturn authorApi.getAuthors().then(authors => {\r\n\t\tdispatcher.dispatch({\r\n\t\t\tactionType: actionTypes.LOAD_AUTHOR,\r\n\t\t\tauthors,\r\n\t\t})\r\n\t})\r\n}\r\n\r\nexport const deleteAuthor = id => {\r\n\treturn authorApi.deleteAuthor(id).then(() => {\r\n\t\tdispatcher.dispatch({\r\n\t\t\tactionType: actionTypes.DELETE_AUTHOR,\r\n\t\t\tid,\r\n\t\t})\r\n\t\ttoast.error(\"âš  Course deleted\")\r\n\t})\r\n}\r\n","import { useState, useEffect } from \"react\"\r\nimport authorStore from \"../stores/authorStore\"\r\nimport { loadAuthors, deleteAuthor } from \"../actions/author/authorActions\"\r\nimport { Link } from \"react-router-dom\"\r\nimport loadable from \"@loadable/component\"\r\nconst AuthorsList = loadable(() => import(\"./AuthorsList\"))\r\n\r\nconst AuthorsPage = () => {\r\n\tconst [authors, setAuthors] = useState(authorStore.getAuthors())\r\n\r\n\tuseEffect(() => {\r\n\t\tfunction sub() {\r\n\t\t\tauthorStore.addChangeListener(onChange)\r\n\t\t}\r\n\r\n\t\tsub()\r\n\r\n\t\tif (authorStore.getAuthors().length === 0) loadAuthors()\r\n\r\n\t\treturn () => {\r\n\t\t\tauthorStore.removeChangeListener(onChange)\r\n\t\t}\r\n\t}, [])\r\n\r\n\tfunction onChange() {\r\n\t\tsetAuthors(authorStore.getAuthors())\r\n\t}\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<h2>Courses</h2>\r\n\t\t\t<Link className='btn btn-primary' to='/author'>\r\n\t\t\t\tAdd Course\r\n\t\t\t</Link>\r\n\t\t\t<AuthorsList authors={authors} deleteAuthor={deleteAuthor} />\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nexport default AuthorsPage\r\n"],"sourceRoot":""}