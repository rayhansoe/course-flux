{"version":3,"sources":["stores/authorStore.js","api/authorApi.js","actions/author/authorActions.js","components/CoursesList.jsx"],"names":["CHANGE_EVENT","_authors","store","this","emit","callback","on","removeListener","slug","find","author","EventEmitter","Dispatcher","register","action","actionType","actionTypes","CREATE_AUTHOR","push","emitChange","LOAD_AUTHOR","authors","UPDATE_AUTHOR","map","id","DELETE_AUTHOR","filter","parseInt","baseUrl","process","REACT_APP_API_URL","saveAuthor","fetch","method","headers","body","JSON","stringify","then","handleResponse","catch","handleError","authorApi","savedAuthor","dispatcher","dispatch","toast","info","loadAuthors","deleteAuthor","authorId","error","Modal","loadable","CoursesList","courses","deleteCourse","useState","authorStore","getAuthors","setAuthors","status","setStatus","courseId","setCourseId","course","setCourse","useEffect","addChangeListener","onChangeAuthors","length","removeChangeListener","GetName","name","handleChange","className","scope","index","to","title","category","type","data-bs-toggle","data-bs-target","onClick","changeCourse","styles"],"mappings":"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","file":"static/js/11.5dd0c406.chunk.js","sourcesContent":["import { EventEmitter } from \"events\"\r\nimport Dispatcher from \"../appDispatcher\"\r\nimport actionTypes from \"../actions/actionTypes\"\r\n\r\nconst CHANGE_EVENT = \"change\"\r\nlet _authors = []\r\n\r\nclass AuthorStore extends EventEmitter {\r\n\temitChange() {\r\n\t\tthis.emit(CHANGE_EVENT)\r\n\t}\r\n\r\n\taddChangeListener(callback) {\r\n\t\tthis.on(CHANGE_EVENT, callback)\r\n\t}\r\n\r\n\tremoveChangeListener(callback) {\r\n\t\tthis.removeListener(CHANGE_EVENT, callback)\r\n\t}\r\n\r\n\tgetAuthors() {\r\n\t\treturn _authors\r\n\t}\r\n\r\n\tgetAuthorsBySlug(slug) {\r\n\t\treturn _authors.find(author => author.slug === slug)\r\n\t}\r\n}\r\n\r\nconst store = new AuthorStore()\r\n\r\nDispatcher.register(action => {\r\n\tswitch (action.actionType) {\r\n\t\tcase actionTypes.CREATE_AUTHOR:\r\n\t\t\t_authors.push(action.author)\r\n\t\t\tstore.emitChange()\r\n\t\t\tbreak\r\n\r\n\t\tcase actionTypes.LOAD_AUTHOR:\r\n\t\t\t_authors = action.authors\r\n\t\t\tstore.emitChange()\r\n\t\t\tbreak\r\n\r\n\t\tcase actionTypes.UPDATE_AUTHOR:\r\n\t\t\t_authors = _authors.map(author => (author.id === action.author.id ? action.author : author))\r\n\t\t\tstore.emitChange()\r\n\t\t\tbreak\r\n\r\n\t\tcase actionTypes.DELETE_AUTHOR:\r\n\t\t\t_authors = _authors.filter(author => author.id !== parseInt(action.id, 10))\r\n\t\t\tstore.emitChange()\r\n\t\t\tbreak\r\n\r\n\t\tdefault:\r\n\t}\r\n})\r\n\r\nexport default store\r\n","import { handleResponse, handleError } from \"./apiUtils\"\nconst baseUrl = process.env.REACT_APP_API_URL\n\t? process.env.REACT_APP_API_URL + \"/authors/\"\n\t: \"https://my-json-server.typicode.com/rayhansoe/course-db-json/authors/\"\n\nexport function getAuthors() {\n\treturn fetch(baseUrl).then(handleResponse).catch(handleError)\n}\n\nexport function saveAuthor(author) {\n\treturn fetch(baseUrl + (author.id || \"\"), {\n\t\tmethod: author.id ? \"PUT\" : \"POST\", // POST for create, PUT to update when id already exists.\n\t\theaders: { \"content-type\": \"application/json\" },\n\t\tbody: JSON.stringify(author),\n\t})\n\t\t.then(handleResponse)\n\t\t.catch(handleError)\n}\n\nexport function deleteAuthor(authorId) {\n\treturn fetch(baseUrl + authorId, { method: \"DELETE\" })\n\t\t.then(handleResponse)\n\t\t.catch(handleError)\n}\n","import actionTypes from \"../actionTypes\"\r\nimport * as authorApi from \"../../api/authorApi\"\r\nimport dispatcher from \"../../appDispatcher\"\r\nimport { toast } from \"react-toastify\"\r\n\r\nexport const saveAuthor = author => {\r\n\treturn authorApi.saveAuthor(author).then(savedAuthor => {\r\n\t\tdispatcher.dispatch({\r\n\t\t\tactionType: author.id ? actionTypes.UPDATE_AUTHOR : actionTypes.CREATE_AUTHOR,\r\n\t\t\tauthor: savedAuthor,\r\n\t\t})\r\n\t\tauthor.id ? toast.info(\"ðŸš€ Author Updated\") : toast.info(\"ðŸš€ Author Saved\")\r\n\t})\r\n}\r\n\r\nexport const loadAuthors = () => {\r\n\treturn authorApi.getAuthors().then(authors => {\r\n\t\tdispatcher.dispatch({\r\n\t\t\tactionType: actionTypes.LOAD_AUTHOR,\r\n\t\t\tauthors,\r\n\t\t})\r\n\t})\r\n}\r\n\r\nexport const deleteAuthor = id => {\r\n\treturn authorApi.deleteAuthor(id).then(() => {\r\n\t\tdispatcher.dispatch({\r\n\t\t\tactionType: actionTypes.DELETE_AUTHOR,\r\n\t\t\tid,\r\n\t\t})\r\n\t\ttoast.error(\"âš  Course deleted\")\r\n\t})\r\n}\r\n","import { Link } from \"react-router-dom\"\r\nimport PropTypes from \"prop-types\"\r\nimport authorStore from \"../stores/authorStore\"\r\nimport { loadAuthors } from \"../actions/author/authorActions\"\r\nimport { useState, useEffect } from \"react\"\r\nimport loadable from \"@loadable/component\"\r\nconst Modal = loadable(() => import(\"./common/Modal\"))\r\n\r\nconst CoursesList = ({ courses, deleteCourse }) => {\r\n\tconst [authors, setAuthors] = useState(authorStore.getAuthors())\r\n\tconst [status, setStatus] = useState(false)\r\n\tconst [courseId, setCourseId] = useState()\r\n\tconst [course, setCourse] = useState()\r\n\r\n\tuseEffect(() => {\r\n\t\tauthorStore.addChangeListener(onChangeAuthors)\r\n\r\n\t\tif (authors.length === 0) loadAuthors()\r\n\r\n\t\treturn () => {\r\n\t\t\tauthorStore.removeChangeListener(onChangeAuthors)\r\n\t\t}\r\n\t}, [authors.length])\r\n\r\n\tconst onChangeAuthors = () => {\r\n\t\tsetAuthors(authorStore.getAuthors())\r\n\t}\r\n\r\n\tconst GetName = ({ id, authors }) => {\r\n\t\treturn <em>{authors.find(author => author.id === id).name}</em>\r\n\t}\r\n\r\n\tconst handleChange = () => {\r\n\t\tif (!status) {\r\n\t\t\tsetStatus(!status)\r\n\t\t} else {\r\n\t\t\tsetCourse({})\r\n\t\t\tsetCourseId(null)\r\n\t\t\tsetStatus(!status)\r\n\t\t}\r\n\t}\r\n\r\n\tconst changeCourse = (course, id) => {\r\n\t\tsetCourseId(id)\r\n\t\tsetCourse(course)\r\n\t}\r\n\r\n\tconst styles = () => {\r\n\t\treturn \"block\"\r\n\t}\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<div>\r\n\t\t\t\t<table className='table'>\r\n\t\t\t\t\t<thead>\r\n\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t<th scope='col'>Title</th>\r\n\t\t\t\t\t\t\t<th scope='col'>Author</th>\r\n\t\t\t\t\t\t\t<th scope='col'>Category</th>\r\n\t\t\t\t\t\t\t<th scope='col'>Action</th>\r\n\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t</thead>\r\n\t\t\t\t\t<tbody>\r\n\t\t\t\t\t\t{courses.map((course, index) => {\r\n\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t<tr key={index}>\r\n\t\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t\t<Link to={\"/course/\" + course.slug}>{course.title}</Link>\r\n\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t\t{authors.length !== 0 ? (\r\n\t\t\t\t\t\t\t\t\t\t\t<GetName id={course.authorId} authors={authors} />\r\n\t\t\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t\t\t\"none\"\r\n\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t\t<td>{course.category}</td>\r\n\t\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\t\t\t\ttype='button'\r\n\t\t\t\t\t\t\t\t\t\t\tclassName='btn btn-outline-danger'\r\n\t\t\t\t\t\t\t\t\t\t\tdata-bs-toggle='modal'\r\n\t\t\t\t\t\t\t\t\t\t\tdata-bs-target='#exampleModal'\r\n\t\t\t\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\t\t\t\thandleChange()\r\n\t\t\t\t\t\t\t\t\t\t\t\tchangeCourse(course, course.id)\r\n\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t\tDELETE\r\n\t\t\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t})}\r\n\t\t\t\t\t</tbody>\r\n\t\t\t\t</table>\r\n\t\t\t</div>\r\n\r\n\t\t\t{/* <!-- Modal --> */}\r\n\t\t\t<Modal\r\n\t\t\t\tstatus={status}\r\n\t\t\t\tonClick={handleChange}\r\n\t\t\t\tdeleteCourse={deleteCourse}\r\n\t\t\t\tstyles={styles}\r\n\t\t\t\tid={courseId ? courseId : null}\r\n\t\t\t\tcourse={course ? course : {}}\r\n\t\t\t\tauthors={authors ? authors : []}\r\n\t\t\t/>\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nCoursesList.propTypes = {\r\n\tdeleteCourse: PropTypes.func.isRequired,\r\n\tcourses: PropTypes.arrayOf(\r\n\t\tPropTypes.shape({\r\n\t\t\tid: PropTypes.number.isRequired,\r\n\t\t\ttitle: PropTypes.string.isRequired,\r\n\t\t\tauthorId: PropTypes.number.isRequired,\r\n\t\t\tcategory: PropTypes.string.isRequired,\r\n\t\t})\r\n\t).isRequired,\r\n}\r\n\r\nexport default CoursesList\r\n"],"sourceRoot":""}