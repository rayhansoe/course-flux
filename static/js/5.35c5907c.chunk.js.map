{"version":3,"sources":["appDispatcher.js","actions/actionTypes.js","api/apiUtils.js","../node_modules/@babel/runtime/helpers/esm/defineProperty.js","stores/authorStore.js","api/authorApi.js","actions/author/authorActions.js","../node_modules/@babel/runtime/helpers/esm/objectSpread2.js","components/ManageAuthorPage.jsx"],"names":["dispatcher","Dispatcher","CREATE_COURSE","LOAD_COURSES","UPDATE_COURSE","DELETE_COURSE","CREATE_AUTHOR","LOAD_AUTHOR","UPDATE_AUTHOR","DELETE_AUTHOR","handleResponse","response","a","ok","json","status","text","error","Error","handleError","console","_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","CHANGE_EVENT","_authors","store","this","emit","callback","on","removeListener","slug","find","author","EventEmitter","register","action","actionType","actionTypes","push","emitChange","authors","map","id","filter","parseInt","baseUrl","process","REACT_APP_API_URL","saveAuthor","fetch","method","headers","body","JSON","stringify","then","catch","authorApi","savedAuthor","dispatch","toast","info","loadAuthors","deleteAuthor","authorId","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","sym","getOwnPropertyDescriptor","apply","_objectSpread2","target","i","arguments","length","source","forEach","getOwnPropertyDescriptors","defineProperties","AuthorForm","loadable","ManageAuthorPage","props","history","useHistory","useState","authorStore","getAuthors","setAuthors","errors","setErrors","name","setAuthor","onChange","useEffect","addChangeListener","match","params","getAuthorsBySlug","removeChangeListener","className","updateCourse","onSubmit","event","preventDefault","_error","formIsValid"],"mappings":"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","file":"static/js/5.35c5907c.chunk.js","sourcesContent":["import { Dispatcher } from \"flux\"\r\n\r\nconst dispatcher = new Dispatcher()\r\n\r\nexport default dispatcher\r\n","/* eslint-disable import/no-anonymous-default-export */\r\nexport default {\r\n\tCREATE_COURSE: \"CREATE_COURSE\",\r\n\tLOAD_COURSES: \"LOAD_COURSES\",\r\n\tUPDATE_COURSE: \"UPDATE_COURSE\",\r\n\tDELETE_COURSE: \"DELETE_COURSE\",\r\n\tCREATE_AUTHOR: \"CREATE_AUTHOR\",\r\n\tLOAD_AUTHOR: \"LOAD_AUTHOR\",\r\n\tUPDATE_AUTHOR: \"UPDATE_AUTHOR\",\r\n\tDELETE_AUTHOR: \"DELETE_AUTHOR\",\r\n}\r\n","export async function handleResponse(response) {\n  if (response.ok) return response.json();\n  if (response.status === 400) {\n    // So, a server-side validation error occurred.\n    // Server side validation returns a string error message, so parse as text instead of json.\n    const error = await response.text();\n    throw new Error(error);\n  }\n  throw new Error(\"Network response was not ok.\");\n}\n\n// In a real app, would likely call an error logging service.\nexport function handleError(error) {\n  // eslint-disable-next-line no-console\n  console.error(\"API call failed. \" + error);\n  throw error;\n}\n","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import { EventEmitter } from \"events\"\r\nimport Dispatcher from \"../appDispatcher\"\r\nimport actionTypes from \"../actions/actionTypes\"\r\n\r\nconst CHANGE_EVENT = \"change\"\r\nlet _authors = []\r\n\r\nclass AuthorStore extends EventEmitter {\r\n\temitChange() {\r\n\t\tthis.emit(CHANGE_EVENT)\r\n\t}\r\n\r\n\taddChangeListener(callback) {\r\n\t\tthis.on(CHANGE_EVENT, callback)\r\n\t}\r\n\r\n\tremoveChangeListener(callback) {\r\n\t\tthis.removeListener(CHANGE_EVENT, callback)\r\n\t}\r\n\r\n\tgetAuthors() {\r\n\t\treturn _authors\r\n\t}\r\n\r\n\tgetAuthorsBySlug(slug) {\r\n\t\treturn _authors.find(author => author.slug === slug)\r\n\t}\r\n}\r\n\r\nconst store = new AuthorStore()\r\n\r\nDispatcher.register(action => {\r\n\tswitch (action.actionType) {\r\n\t\tcase actionTypes.CREATE_AUTHOR:\r\n\t\t\t_authors.push(action.author)\r\n\t\t\tstore.emitChange()\r\n\t\t\tbreak\r\n\r\n\t\tcase actionTypes.LOAD_AUTHOR:\r\n\t\t\t_authors = action.authors\r\n\t\t\tstore.emitChange()\r\n\t\t\tbreak\r\n\r\n\t\tcase actionTypes.UPDATE_AUTHOR:\r\n\t\t\t_authors = _authors.map(author => (author.id === action.author.id ? action.author : author))\r\n\t\t\tstore.emitChange()\r\n\t\t\tbreak\r\n\r\n\t\tcase actionTypes.DELETE_AUTHOR:\r\n\t\t\t_authors = _authors.filter(author => author.id !== parseInt(action.id, 10))\r\n\t\t\tstore.emitChange()\r\n\t\t\tbreak\r\n\r\n\t\tdefault:\r\n\t}\r\n})\r\n\r\nexport default store\r\n","import { handleResponse, handleError } from \"./apiUtils\"\nconst baseUrl = process.env.REACT_APP_API_URL\n\t? process.env.REACT_APP_API_URL + \"/authors/\"\n\t: \"https://my-json-server.typicode.com/rayhansoe/course-db-json/authors/\"\n\nexport function getAuthors() {\n\treturn fetch(baseUrl).then(handleResponse).catch(handleError)\n}\n\nexport function saveAuthor(author) {\n\treturn fetch(baseUrl + (author.id || \"\"), {\n\t\tmethod: author.id ? \"PUT\" : \"POST\", // POST for create, PUT to update when id already exists.\n\t\theaders: { \"content-type\": \"application/json\" },\n\t\tbody: JSON.stringify(author),\n\t})\n\t\t.then(handleResponse)\n\t\t.catch(handleError)\n}\n\nexport function deleteAuthor(authorId) {\n\treturn fetch(baseUrl + authorId, { method: \"DELETE\" })\n\t\t.then(handleResponse)\n\t\t.catch(handleError)\n}\n","import actionTypes from \"../actionTypes\"\r\nimport * as authorApi from \"../../api/authorApi\"\r\nimport dispatcher from \"../../appDispatcher\"\r\nimport { toast } from \"react-toastify\"\r\n\r\nexport const saveAuthor = author => {\r\n\treturn authorApi.saveAuthor(author).then(savedAuthor => {\r\n\t\tdispatcher.dispatch({\r\n\t\t\tactionType: author.id ? actionTypes.UPDATE_AUTHOR : actionTypes.CREATE_AUTHOR,\r\n\t\t\tauthor: savedAuthor,\r\n\t\t})\r\n\t\tauthor.id ? toast.info(\"ðŸš€ Author Updated\") : toast.info(\"ðŸš€ Author Saved\")\r\n\t})\r\n}\r\n\r\nexport const loadAuthors = () => {\r\n\treturn authorApi.getAuthors().then(authors => {\r\n\t\tdispatcher.dispatch({\r\n\t\t\tactionType: actionTypes.LOAD_AUTHOR,\r\n\t\t\tauthors,\r\n\t\t})\r\n\t})\r\n}\r\n\r\nexport const deleteAuthor = id => {\r\n\treturn authorApi.deleteAuthor(id).then(() => {\r\n\t\tdispatcher.dispatch({\r\n\t\t\tactionType: actionTypes.DELETE_AUTHOR,\r\n\t\t\tid,\r\n\t\t})\r\n\t\ttoast.error(\"âš  Course deleted\")\r\n\t})\r\n}\r\n","import defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","import React, { useState, useEffect } from \"react\"\r\nimport loadable from \"@loadable/component\"\r\nimport { saveAuthor, loadAuthors } from \"../actions/author/authorActions\"\r\nimport authorStore from \"../stores/authorStore\"\r\nimport { useHistory } from \"react-router-dom\"\r\nconst AuthorForm = loadable(() => import(\"./AuthorForm\"))\r\n\r\nconst ManageAuthorPage = props => {\r\n\tconst history = useHistory()\r\n\tconst [authors, setAuthors] = useState(authorStore.getAuthors())\r\n\tconst [errors, setErrors] = useState({})\r\n\tconst [author, setAuthor] = useState({\r\n\t\tid: null,\r\n\t\tname: \"\",\r\n\t\tslug: \"\",\r\n\t})\r\n\r\n\tuseEffect(() => {\r\n\t\tauthorStore.addChangeListener(onChange)\r\n\t\tconst slug = props.match.params.slug\r\n\r\n\t\tif (authors.length === 0) {\r\n\t\t\tloadAuthors()\r\n\t\t} else if (slug) {\r\n\t\t\tif (authorStore.getAuthorsBySlug(slug)) {\r\n\t\t\t\tsetAuthor(authorStore.getAuthorsBySlug(slug))\r\n\t\t\t} else {\r\n\t\t\t\thistory.push(\"/course-flux/404\")\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn () => {\r\n\t\t\tauthorStore.removeChangeListener(onChange)\r\n\t\t}\r\n\t}, [authors.length, history, props.match.params.slug])\r\n\r\n\tfunction onChange() {\r\n\t\tsetAuthors(authorStore.getAuthors())\r\n\t}\r\n\r\n\tconst formIsValid = () => {\r\n\t\tconst _error = {}\r\n\r\n\t\tif (!author.name) _error.name = \"Name is required\"\r\n\r\n\t\tsetErrors(_error)\r\n\t\t// Form is valid if the errors object has no props.\r\n\t\treturn Object.keys(_error).length === 0\r\n\t}\r\n\r\n\tconst handleChange = ({ target }) => {\r\n\t\tconst updateCourse = { ...author, [target.name]: target.value }\r\n\t\tsetAuthor(updateCourse)\r\n\t}\r\n\r\n\tconst handleSubmit = event => {\r\n\t\tevent.preventDefault()\r\n\t\tif (!formIsValid()) return\r\n\t\tsaveAuthor(author).then(() => {\r\n\t\t\tprops.history.push(\"/authors\")\r\n\t\t})\r\n\t}\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<div className='jumbotron'>\r\n\t\t\t\t<h2>Manage Course</h2>\r\n\t\t\t\t{/* <h5 className='mt-3 fw-normal'>{props.match.params.slug}</h5> */}\r\n\t\t\t\t{props.match.params.slug ? <h5 className='mt-3 fw-normal'>{author.name}</h5> : \"\"}\r\n\t\t\t</div>\r\n\r\n\t\t\t<AuthorForm author={author} onChange={handleChange} onSubmit={handleSubmit} errors={errors} />\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nexport default ManageAuthorPage\r\n"],"sourceRoot":""}